<template>
    <div class="detxmkh">
        <el-table :data="xmkhList" stripe border style="width: 100%">
            <el-table-column type="index" label="序号" width="80" :index="index_xmkh"></el-table-column>
            <el-table-column prop="xmmc" label="项目名称" show-overflow-tooltip></el-table-column>
            <el-table-column prop="xmbh" label="项目编号" show-overflow-tooltip></el-table-column>
            <el-table-column prop="khr" label="考核人" show-overflow-tooltip></el-table-column>
            <el-table-column prop="khsj" label="考核时间" :formatter="formatterDatekhsj" show-overflow-tooltip></el-table-column>
            <el-table-column prop="khpf" label="综合评分" show-overflow-tooltip></el-table-column>
            <el-table-column prop="khjg" label="考核结果" show-overflow-tooltip></el-table-column>
            <el-table-column prop="xzqh" label="行政区划" show-overflow-tooltip></el-table-column>
            <el-table-column prop="bmbm" label="部门科室" show-overflow-tooltip></el-table-column>
            <el-table-column prop="lrr" label="录入人" show-overflow-tooltip></el-table-column>
            <el-table-column prop="lrsj" label="录入时间"  :formatter="formatterDatelrsj" show-overflow-tooltip></el-table-column>
            <el-table-column label="操作">
                <template slot-scope="scope">
                    <el-button size="mini" type="primary">详情</el-button>
                </template>
            </el-table-column>
        </el-table>
        <div class="mar10 fr">
            <el-pagination @current-change="xmkhChange" :current-page.sync="xmkhFrom.pageNo" :page-size="xmkhFrom.pageSize" layout="total, prev, pager, next" :total="totalCount">
            </el-pagination>
        </div>
    </div>
</template>


<script>
import { assessSelect } from "@/api/projectAssess";
import { formatDate } from "@/utils/data";
export default {
  data() {
    return {
      xmkhList: [],
      xmid:"",
      totalCount: 0,
      xmkhFrom: {
        pageNo: 1,
        pageSize: 5
      }
    };
  },
  props: {
      khxmid: String,
  },
  watch: {
      khxmid(val) {
         this.xmid = val;
         this.xmkhSearch(this.xmkhFrom.pageNo,this.xmkhFrom.pageSize,this.xmid);
      },
  },
  methods: {
    xmkhSearch(pageNo,pageSize,option){
       let obj = {
            pageNo: pageNo,
            pageSize: pageSize,
        };
        option ? obj.xmid = option : "";
        assessSelect(obj).then(res => {
            this.xmkhList = res.data.msg.data;
            this.totalCount = res.data.msg.totalCount;
        });
    },
    xmkhChange(val) {
      this.xmkhFrom.pageNo = val;
      this.xmysSearch(this.xmkhFrom.pageNo,this.xmkhFrom.pageSize,this.xmid);
    },
    index_xmkh(index) {
        let start = (this.xmkhFrom.pageNo - 1) * this.xmkhFrom.pageSize;
        return start + index + 1;
    },
    formatterDatelrsj(row){
        return formatDate(row.lrsj, "yyyy-MM-dd");
    },
    formatterDatekhsj(row){
        return formatDate(row.khsj, "yyyy-MM-dd");
    },
  }
};
</script>