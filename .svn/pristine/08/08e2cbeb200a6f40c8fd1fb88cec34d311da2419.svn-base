<template>
    <div class="ProcessinstiuTion">
        <div v-bind:class="{boxFist:fistActive}">
            <el-form :inline="true" class="demo-form-inline">
                <el-form-item label="年度">
                <el-select v-model="seatch_nd" @keyup.enter.native="searchFun" placeholder="请选择..." prefix-icon="el-icon-search">
                    <el-option v-for="(item,index) in ndOptions" :key="index" :label="item.label" :value="item.value">
                    </el-option>
                </el-select>
                </el-form-item>
                <el-form-item label="项目名称">
                <el-input v-model="seatch_name" @keyup.enter.native="searchFun" placeholder="名称..." prefix-icon="el-icon-search"></el-input>
                </el-form-item>
                <el-form-item>
                <el-button type="primary" size="medium" @click="searchFun">查询</el-button>
                </el-form-item>
            </el-form>
            <div class="user-list">
                <el-table :data="xmgsList" stripe border style="width: 100%">
                    <el-table-column type="index" label="序号" width="80"></el-table-column>
                    <el-table-column prop="xzqh" :formatter="getXzqh" label="行政区划" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="bmcs" :formatter="getBmbm" label="部门处室" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="xmmc" label="项目名称" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="nd" label="年度" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="xmbh" label="项目编号" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="xmze" label="项目总额(万元)" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="kssj" :formatter="formatterDatekssj" label="开始时间" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="jssj" :formatter="formatterDatejssj" label="结束时间" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="address" label="操作" width="150">
                        <template slot-scope="scope">
                            <el-button size="mini" type="primary" @click="changeModal(scope.row)">进度</el-button>
                        </template>
                    </el-table-column>
                </el-table>
                <div class="user-page fr">
                    <el-pagination @current-change="handleCurrentChange" :current-page.sync="pageNo" :page-size="pageSize" layout="total, prev, pager, next" :total="totalCount">
                    </el-pagination>
                </div>
            </div>
        </div>
        <div v-bind:class="{boxSecond:secondActive}">
            <div class="capit-tit">
                <el-row>
                    <el-col :span="12">
                        <div class="user-left">
                            <span>进度列表</span>
                        </div>
                    </el-col>
                    <el-button class="backBtn" size="mini" type="primary" @click="backBtn()">返回</el-button>
                </el-row>
            </div>
            <div class="capit-list">
                <el-table :data="xmjdList" stripe border style="width: 100%">
                    <el-table-column type="index" :index="indexMethod2" label="序号" width="80"></el-table-column>
                    <el-table-column prop="xmmc" label="项目名称" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="xmbh" label="项目编号" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="xmjd" label="项目进度(%)" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="kssj" label="开始时间" :formatter="ksformatterData" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="jssj" label="结束时间" :formatter="jsformatterData" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="lrr" label="录入人" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="lrsj" label="录入时间" :formatter="lrformatterData" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="wgnr" label="完工内容" show-overflow-tooltip></el-table-column>
                    <el-table-column prop="address" label="操作" width="150">
                        <template slot-scope="scope">
                            <el-button size="mini" type="primary" @click="xmjdEdit(scope.row)">编辑</el-button>
                            <el-button size="mini" type="danger" @click="xmjdDel(scope.row)">删除</el-button>
                        </template>
                    </el-table-column>
                </el-table>
                <div class="user-page fr">
                    <el-pagination @current-change="handleCurrentChange2" :current-page.sync="pageNo2" :page-size="pageSize2" layout="total, prev, pager, next" :total="totalCount2">
                    </el-pagination>
                </div>
            </div>
            <div class="capit-tit" style="margin:44px 0 20px 0">
                <el-row>
                    <el-col :span="12">
                        <div class="user-left">
                            <span>进度详情</span>
                        </div>
                    </el-col>
                    <el-button class="backBtn" size="mini" type="primary" @click="xmjdAddInt()">新增</el-button>
                </el-row>
            </div>
            <el-form :inline="true" :model="xmjdFrom" ref="xmjdFrom" class="demo-form-inline" label-width="100px" :rules="rulesXmjd">
                <el-row>
                    <el-col :span="9" :offset="2">
                        <el-form-item label="项目名称" prop="xmmc">
                            <el-input v-model="xmjdFrom.xmmc" placeholder="项目名称" :disabled="true"></el-input>
                        </el-form-item>
                    </el-col>
                    <el-col :span="9" :offset="2">
                        <el-form-item label="项目编号" prop="xmbh">
                            <el-input v-model="xmjdFrom.xmbh" placeholder="项目编号" :disabled="true"></el-input>
                        </el-form-item>
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span="9" :offset="2">
                        <el-form-item label="进度(%)" prop="xmjd">
                            <el-input v-model="xmjdFrom.xmjd" placeholder="进度"></el-input>
                        </el-form-item>
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span="9" :offset="2">
                        <el-form-item label="开始时间" prop="kssj">
                            <el-date-picker v-model="xmjdFrom.kssj" type="datetime" :editable="false" placeholder="开始时间" :picker-options="limitStartTime"></el-date-picker>
                        </el-form-item>
                    </el-col>
                    <el-col :span="9" :offset="2">
                        <el-form-item label="结束时间" prop="jssj">
                            <el-date-picker v-model="xmjdFrom.jssj" type="datetime" :editable="false" placeholder="结束时间" :picker-options="limitEndTime"></el-date-picker>
                        </el-form-item>

                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span="9" :offset="2">
                        <el-form-item label="录入人" prop="lrr">
                            <el-input v-model="xmjdFrom.lrr" placeholder="录入人" :disabled="true"></el-input>
                        </el-form-item>
                    </el-col>
                    <el-col :span="9" :offset="2">
                        <el-form-item label="录入时间" prop="lrsj">
                            <el-date-picker id="xdsysj" v-model="xmjdFrom.lrsj" type="datetime" placeholder="录入时间" :disabled="true"></el-date-picker>
                        </el-form-item>
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span="20" :offset="2">
                        <el-form-item label="完工内容" prop="wgnr">
                            <el-input type="textarea" :autosize="{ minRows: 5}" v-model="xmjdFrom.wgnr" placeholder="完工内容"></el-input>
                        </el-form-item>
                    </el-col>

                </el-row>
                <el-row>
                    <el-col :offset="4" :span="3">
                        <el-button type="success" size="small" @click="fileClick">查看附件</el-button>
                    </el-col>
                    <el-col :span="3">
                        <el-upload class="upload-demo" action="http://localhost:10000/file/ajax/upload_file" :data="upLoadData" :on-preview="handlePreview" :on-remove="handleRemove" :on-success="handleSuccess" :file-list="fileList2">
                            <el-button size="small" type="primary">上传附件</el-button>
                            <div slot="tip" class="el-upload__tip">只能上传jpg/png文件，且不超过500kb</div>
                        </el-upload>
                    </el-col>
                </el-row>
            </el-form>
            <span slot="footer" class="dialog-footer" style="margin-left:45%;">
                <el-button type="primary" @click="btn_xmjdSave">保 存</el-button>
                 <el-button @click="backBtn()">取 消</el-button>
            </span>

        </div>
        <accessory-Model :newModal="accessoryModalInt" @colseTog="colseTog" :textTit="textTit"></accessory-Model>
    </div>
</template>
<script>
import accessoryModel from "@/components/accessoryModel";
import { xmlbList } from "@/api/projectOutline";
import {
    xmjdSelect,
    xmjdAdd,
    xmjdUpdate,
    xmjdDell
} from "@/api/projectProcess";
import { doCreate, getDicTab } from "@/utils/config";
import { validateNumber } from "@/utils/validate";
import { formatDate } from "@/utils/data";

export default {
    components: {
        accessoryModel
    },
    data() {
        const Onetohundred = (rule, value, callback) => {
            if (!validateNumber(value)) {
                callback(new Error("请输入大于0小于100数字"));
            } else {
                callback();
            }
        };

        return {
            xmgsList: [],
            xmjdList: [],
            xmjdFrom: {},
            seatch_nd: "",
            seatch_name: "",
            fistActive: false,
            secondActive: true,
            newModal: false,
            accessoryModalInt: false,
            fileList2: [],
            editModal: false,
            addUpdatePd: true,
            editTitle: "",
            textTit: "",
            pageNo: 1,
            pageSize: 10,
            totalCount: 1,
            pageNo2: 1,
            pageSize2: 4,
            totalCount2: 10,
            ndOptions: [],
            editObj: {},
            xmid: "",
            xmmc: "",
            xmbh: "",
            upLoadData: {
                uploadDir: "111",
                file: "123"
            },
            rulesXmjd: {
                xmjd: [
                    {
                        required: true,
                        validator: Onetohundred
                    }
                ],
                kssj: [{ required: true, message: "不能为空" }],
                jssj: [{ required: true, message: "不能为空" }]
            },
            limitStartTime: {
                disabledDate: time => {
                    var end_time = this.xmjdFrom.jssj;
                    let endDateVal = new Date(end_time).getTime();
                    if (endDateVal) {
                        return time.getTime() > endDateVal;
                    }
                }
            },
            limitEndTime: {
                disabledDate: time => {
                    var start_time = this.xmjdFrom.kssj;
                    let startDateVal = new Date(start_time).getTime();
                    if (startDateVal) {
                        return time.getTime() < startDateVal;
                    }
                }
            }
        };
    },
    methods: {
        ksformatterData(row) {
            return formatDate(row.kssj, "yyyy-MM-dd");
        },
        jsformatterData(row) {
            return formatDate(row.jssj, "yyyy-MM-dd");
        },
        lrformatterData(row) {
            return formatDate(row.lrsj, "yyyy-MM-dd");
        },
        getXzqh(row) {
            return getDicTab("xzqh", row.xzqh);
        },
        getBmbm(row) {
            return getDicTab("bmbm", row.bmbm);
        },
        formatterDatekssj(row) {
            return formatDate(row.kssj, "yyyy-MM-dd");
        },
        formatterDatejssj(row) {
            return formatDate(row.jssj, "yyyy-MM-dd");
        },
        handleCurrentChange(val) {
            this.pageNo = val;
        },
        handleCurrentChange2(val) {
            this.pageNo2 = val;
            this.changeModal();
        },
        indexMethod(index) {
            let start = (this.pageNo - 1) * this.pageSize;
            return start + index + 1;
        },
        indexMethod2(index) {
            let start = (this.pageNo2 - 1) * this.pageSize2;
            return start + index + 1;
        },
        getList(val) {
            let obj = {
                pageSize: this.pageSize,
                pageNo: this.pageNo,
                bmbm:this.$store.state.user.user.uUser.bmbm,
                // xzqh: this.$store.state.user.user.uUser.xzqh,
                // bm: this.$store.state.user.user.uUser.bmbm,
                // fgks: "0"
            };
            this.seatch_name ? (obj.xmmc = this.seatch_name) : "";
            this.seatch_nd ? (obj.nd = this.seatch_nd) : "";
            xmlbList(obj).then(res => {
                this.xmgsList = res.data.data.elements;
                this.totalCount = res.data.data.totalCount;
            });
        },
        searchFun() {
            this.getList();
        },
        btn_xmjdSave() {
            this.$refs.xmjdFrom.validate(valid => {
                if (valid) {
                    if (this.addUpdatePd === true) {
                        let obj = Object.assign({}, this.xmjdFrom);
                        obj.xmid = this.xmid;
                        xmjdAdd(obj).then(res => {
                            let data = res.data;
                            if (data.success) {
                                this.$message({
                                    message: data.msg,
                                    type: "success"
                                });
                                this.addUpdatePd = true;
                                this.xmjdFrom = {};
                                this.$refs.xmjdFrom.resetFields();
                                this.changeModal();
                                this.xmjdFromInt();
                            } else {
                                this.$message({
                                    message: data.msg,
                                    type: "success"
                                });
                            }
                        });
                    } else {
                        let obj = Object.assign({}, this.xmjdFrom);
                        obj.xmid = this.xmid;
                        xmjdUpdate(obj).then(res => {
                            let data = res.data;
                            if (data.success) {
                                this.$message({
                                    message: data.msg,
                                    type: "success"
                                });
                                this.addUpdatePd = true;
                                this.xmjdFrom = {};
                                this.$refs.xmjdFrom.resetFields();
                                this.changeModal();
                                this.xmjdFromInt();
                            } else {
                                this.$message({
                                    message: data.msg,
                                    type: "success"
                                });
                            }
                        });
                    }
                }
            });
        },
        xmjdEdit(row) {
            this.$refs.xmjdFrom.resetFields();
            let obj = Object.assign({}, row);
            this.xmjdFrom = obj;
            this.addUpdatePd = false;
        },
        xmjdDel(row) {
            xmjdDell({ id: row.id }).then(res => {
                let data = res.data;
                this.$message({
                    message: data.msg,
                    type: "success"
                });
                this.xmjdFrom = {};
                this.changeModal();
                this.$refs.xmjdFrom.resetFields();
                this.xmjdFromInt();

                this.addUpdatePd = true;
            });
        },
        xmjdAddInt() {
            this.xmjdFrom = {};
            this.addUpdatePd = true;
            this.$refs.xmjdFrom.resetFields();
            this.xmjdFromInt();
        },
        changeModal(row) {
            if (row) {
                this.xmid = row.id;
                this.xmmc = row.xmmc;
                this.xmbh = row.xmbh;
                this.xmjdFrom = {};
                this.$refs.xmjdFrom.resetFields();
                this.xmjdFromInt();
            }
            let obj = {
                pageNo: this.pageNo2,
                pageSize: this.pageSize2,
                xmid: this.xmid
            };

            xmjdSelect(obj).then(res => {
                this.xmjdList = res.data.msg.data;
                this.totalCount2 = res.data.msg.totalCount;
            });

            this.fistActive = true;
            this.secondActive = false;
        },
        backBtn() {
            this.fistActive = false;
            this.secondActive = true;
        },
        xmjdFromInt() {
            let nowDate = new Date().getTime();
            this.xmjdFrom.xmmc = this.xmmc;
            this.xmjdFrom.xmbh = this.xmbh;
            this.xmjdFrom.lrr = this.$store.state.user.user.uUser.username;
            this.xmjdFrom.lrsj = formatDate(nowDate, "yyyy-MM-dd hh:mm:ss");
        },
        colseTog(val) {
            this.accessoryModalInt = val;
        },
        fileClick() {
            this.accessoryModalInt = true;
            this.textTit = "附件";
        },
        handleRemove(file, fileList) {
            console.log(file, fileList);
        },
        handlePreview(file) {
            console.log(file);
        },
        handleSuccess(res){
            console.log(res)
        }
    },
    mounted() {
        this.ndOptions = doCreate("ndTit");
        this.getList();
        this.addUpdatePd = true;
    }
};
</script>
<style lang="scss" scoped>
.ProcessinstiuTion {
    .boxFist {
        display: none;
    }
    .boxSecond {
        display: none;
    }
    .capit-tit {
        background: #317ecc;
        margin: 20px 0 0 0;
        .user-left {
            span {
                color: #fff;
                display: inline-block;
                text-align: center;
                cursor: pointer;
                margin: 10px 20px;
            }
        }
        .backBtn {
            float: right;
            margin-top: 5px;
            margin-right: 20px;
        }
    }
}
</style>
